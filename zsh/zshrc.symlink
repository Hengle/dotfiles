# shortcut to this dotfiles path is $DOTFILES
export DOTFILES=$HOME/.dotfiles

if [[ -d "$HOME/.zcompcache" ]]
then
	export ZSH_CACHE_DIR=$HOME/.zcompcache
fi

if [[ -a $DOTFILES/.multiuser ]]
then
	# skip verification of insecure directories (to allow multiuser setups)
	export ZSH_DISABLE_COMPFIX="true"
fi

if [[ -a $HOME/.antigen/antigen.zsh ]]
then # antigen -> also install oh-my-git :-)
	source "$HOME/.antigen/antigen.zsh"

	# Use oh-my-zsh
	antigen use oh-my-zsh

	# Install bundles from deafult repo
	antigen bundle brew
	antigen bundle gem
	antigen bundle extract
  antigen bundle kubectl

	# Install and use zshmarks
	antigen bundle jocelynmallon/zshmarks

	# Install and use oh-my-git
	antigen bundle arialdomartini/oh-my-git

  # Install zsh-autosuggestions
  antigen bundle zsh-users/zsh-autosuggestions

	# Set the theme
	antigen theme arialdomartini/oh-my-git-themes oppa-lana-style

	antigen-apply

	# Set some stuff to those of prose
	omg_ungit_prompt="%{$fg[magenta]%}%n%{$reset_color%} at %{$fg[yellow]%}%m%{$reset_color%} in %{$fg_bold[green]%}%~%{$reset_color%} %# "
	omg_second_line=$omg_ungit_prompt
	export LSCOLORS="Gxfxcxdxbxegedabagacad"
	export LS_COLORS='no=00:fi=00:di=01;34:ln=00;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=41;33;01:ex=00;32:*.cmd=00;32:*.exe=01;32:*.com=01;32:*.bat=01;32:*.btm=01;32:*.dll=01;32:*.tar=00;31:*.tbz=00;31:*.tgz=00;31:*.rpm=00;31:*.deb=00;31:*.arj=00;31:*.taz=00;31:*.lzh=00;31:*.lzma=00;31:*.zip=00;31:*.zoo=00;31:*.z=00;31:*.Z=00;31:*.gz=00;31:*.bz2=00;31:*.tb2=00;31:*.tz2=00;31:*.tbz2=00;31:*.avi=01;35:*.bmp=01;35:*.fli=01;35:*.gif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mng=01;35:*.mov=01;35:*.mpg=01;35:*.pcx=01;35:*.pbm=01;35:*.pgm=01;35:*.png=01;35:*.ppm=01;35:*.tga=01;35:*.tif=01;35:*.xbm=01;35:*.xpm=01;35:*.dl=01;35:*.gl=01;35:*.wmv=01;35:*.aiff=00;32:*.au=00;32:*.mid=00;32:*.mp3=00;32:*.ogg=00;32:*.voc=00;32:*.wav=00;32:'
else # plain oh-my-zsh
	# Path to your oh-my-zsh configuration.
	ZSH=$HOME/.oh-my-zsh

	# Set name of the theme to load.
	# Look in ~/.oh-my-zsh/themes/
	ZSH_THEME="spaceship"

	# Spaceship customization 
	# from https://github.com/denysdovhan/spaceship-prompt/blob/master/docs/Options.md
	SPACESHIP_TIME_SHOW=true
	SPACESHIP_PROMPT_FIRST_PREFIX_SHOW=true
	SPACESHIP_HOST_SHOW="ssh"
	SPACESHIP_HOST_COLOR="blue"
	SPACESHIP_HOST_COLOR_SSH="blue"
	SPACESHIP_USER_SHOW="true"
	SPACESHIP_CHAR_SYMBOL="○"
	SPACESHIP_CHAR_SUFFIX=(" ")
	SPACESHIP_DIR_COLOR="green"
	SPACESHIP_GIT_SYMBOL="\ue725 "
	SPACESHIP_KUBECONTEXT_SYMBOL="\ue7b2 "
	SPACESHIP_KUBECONTEXT_SHOW=false
	SPACESHIP_TERRAFORM_SYMBOL="\uf9fd "
	SPACESHIP_DIR_TRUNC="0"

	SPACESHIP_PROMPT_ORDER=(
		time        	# Time stamps section
		user          # Username section
		host          # Hostname section
		dir           # Current directory section
		git           # Git section (git_branch + git_status)
		# hg          # Mercurial section (hg_branch  + hg_status) 
		package       # Package version
		node          # Node.js section
		ruby          # Ruby section
		# elixir      # Elixir section
		# xcode         # Xcode section
		# swift         # Swift section
		golang        # Go section
		# php         # PHP section
		rust          # Rust section
		# haskell     # Haskell Stack section
		# julia       # Julia section
		# docker      # Docker section
		# aws         # Amazon Web Services section
		# venv        # virtualenv section
		# conda       # conda virtualenv section
		# pyenv       # Pyenv section
		# dotnet      # .NET section
		# ember       # Ember.js section
		kubecontext   # Kubectl context section
		terraform     # Terraform workspace section
		exec_time     # Execution time
		line_sep      # Line break
		battery       # Battery level and status
		# vi_mode     # Vi-mode indicator
		jobs          # Background jobs indicator
		exit_code     # Exit code section
		char          # Prompt character
	)

	# Comment following line if you do not want red dots to be displayed while waiting for completion
	COMPLETION_WAITING_DOTS="true"
	
	# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
	plugins=(brew 
					 droplr
					 docker
					 docker-compose
					 extract
					 gem
					 gitignore
					 git-open-pr
					 git-extras
					 git-hubflow
					 git-remote-branch
					 git-it-on
					 helm
					 httpie
					 iterm2
					 kubectl
					 oh-my-matrix
					 npm
					 osx
					 react-native
					 vagrant
					 xcode
					 vault
					 zshmarks
					 zsh-brew-services
					 zsh-dropbox
					 zsh-iterm-touchbar
					 zsh-autosuggestions
					 zsh-yarn-autocompletions
					 zsh-completions)
	
	# Load them all
	source $ZSH/oh-my-zsh.sh
fi

# your project folder that we can `c [tab]` to
export PROJECTS=~/Development

# use .localrc for SUPER SECRET CRAP that you don't
# want in your public, versioned repo.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# all of our zsh files
typeset -U config_files
config_files=($DOTFILES/**/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# Speeds up load time
DISABLE_UPDATE_PROMPT=true

# Perform compinit only once a day.
autoload -Uz compinit

# initialize autocomplete here, otherwise functions won't be loaded
setopt EXTENDEDGLOB
for dump in $ZSH_COMPDUMP(#qN.m1); do
  compinit
  if [[ -s "$dump" && (! -s "$dump.zwc" || "$dump" -nt "$dump.zwc") ]]; then
    zcompile "$dump"
  fi
  echo "Initializing Completions..."
done
unsetopt EXTENDEDGLOB
compinit -C

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

export CC=/usr/bin/gcc
unsetopt correct_all

# Put local stuff that you want at the end of everything in here
if [[ -a ~/.localrc.late ]]
then
	source ~/.localrc.late
fi

# support asdf
if [[ -a /usr/local/opt/asdf/asdf.sh ]]
then
	source /usr/local/opt/asdf/asdf.sh
fi

if [[ -a /usr/local/opt/asdf/etc/bash_completion.d/asdf.bash ]]
then
	source /usr/local/opt/asdf/etc/bash_completion.d/asdf.bash
fi

# allow zeus and unicorn to fork
export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES

# A command-line fuzzy finder (https://github.com/junegunn/fzf)
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Customize iTerm2 Touchbar integration
export TOUCHBAR_GIT_ENABLED=true
export GIT_UNCOMMITTED="+"
export GIT_UNSTAGED="!"
export GIT_UNTRACKED="?"
export GIT_STASHED="$"
export GIT_UNPULLED="⇣"
export GIT_UNPUSHED="⇡"
export YARN_ENABLED=true

# Fix direcory autocompletion when using autosuggestions
ZSH_AUTOSUGGEST_IGNORE_WIDGETS+=(expand-or-complete)

# Needed to run Helm Secrets
if [[ -a /usr/local/opt/gnu-getopt/bin/getopt ]]
then
  export PATH="/usr/local/opt/gnu-getopt/bin:$PATH"
fi

# Check for update of the dotfiles
if [ "$DISABLE_AUTO_UPDATE" != "true" ]; then
  env DOTFILES=$DOTFILES DISABLE_UPDATE_PROMPT=$DISABLE_UPDATE_PROMPT zsh -f $DOTFILES/tools/check_for_upgrade.sh
fi