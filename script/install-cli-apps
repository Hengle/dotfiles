#!/usr/bin/env sh
set +e
proceed=1
result=0

echo "\033[1;30m=================================================================
\033[0;37m               _                   _       _    __ _ _           
              (_)                 | |     | |  / _(_) |          
 _______ _ __  _  ___  _   _    __| | ___ | |_| |_ _| | ___  ___ 
|_  / _ \ '_ \| |/ _ \| | | |  / _\` |/ _ \| __|  _| | |/ _ \/ __|
 / /  __/ | | | | (_) | |_| | | (_| | (_) | |_| | | | |  __/\__ \\
/___\___|_| |_| |\___/ \__, |  \__,_|\___/ \__|_| |_|_|\___||___/
             _/ |       __/ |                                    
            |__/       |___/

\033[1;30m*****************************************************************
\033[1;37m         Let's install some interesting cli apps ...
\033[1;30m=================================================================
\033[1;37m"

while :; do
  case $1 in
    -h|--help) showhelp=1
    ;;
    *) break
  esac
  shift
done


success () {
  printf "\r\033[2K [ \033[00;32mok\033[0m ] $*\n"
}


info () {
  proceed=1
  printf "\r\033[2K [ \033[00;34m..\033[0m ] $1"
  message="$1"
}

user () {
  printf "\r\033[2K [ \033[00;33m?\033[0m ] $*"
}

fail () {
  printf "\r\033[2K [\033[0;31mFAIL\033[0m] $*\n"
  echo ''
  echo "See /tmp/cli-tools-setup for more information.\n"
  return 1
}

successfully() {
  if [[ $proceed -ne 0 ]]; then
    echo "We are proceeding with the command: $*" >> /tmp/cli-tools-setup 2>&1
    eval "$*" >> /tmp/cli-tools-setup 2>&1
    result=$?
    if [[ $result -ne 0 ]]; then
      fail "$message : failed" 2>&1
      return 1
    else
      success "$message : installed"
    fi
  fi
}

check() {
  printf " [ \033[00;34m..\033[0m ] $1 : checking"
  echo "Checking $1, running $2:\n" >> /tmp/cli-tools-setup 2>&1
  eval "$2" > /dev/null 2>&1
  result=$?
  if [[ $result -ne 0 ]]; then
    proceed=1
    info "$1 : installing"
    message="$1"
  else
    proceed=0
    success "$1 : found"
  fi
}

echo "Feel free to follow the details by running:\n"
echo "\033[0m  tail -f /tmp/cli-tools-setup in another terminal"
message=""
echo ""
current_dir=$(pwd)
echo "\033[0;37mFirst some base stuff we need:\n"

check "homebrew" "command -v brew"
  successfully "exec bash -c 'echo | ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"'"

check "node / npm" "command -v npm"
  successfully "brew install npm"

check "python 2.x" "brew info python@2"
  successfully "brew install python@2"

check "python 3.x" "brew info python"
  successfully "brew install python"

echo "\n\033[1;37mNow the interesting things:\n"

check "httpie (a user-friendly http client)" "command -v http"
  successfully "brew install httpie"

check "jq (json processor)" "command -v jq"
  successfully "brew install jq"

check "fx (json processor)" "command -v fx"
  successfully "brew install fx"

check "howdoi (check stackoverflow)" "command -v howdoi"
  successfully "pip install howdoi"

check "haxor-news (hacker news reader)" "command -v hn"
  successfully "pip install haxor-news"

check "colorls (colorized ls command)" "gem list colorls | grep colorls"
  successfully "gem install colorls"

check "googler (google cli)" "command -v googler"
  successfully "brew install googler"

check "youtube-dl (youtube downloader)" "command -v youtube-dl"
  successfully "brew install youtube-dl"

check "caniuse (check caniuse.com)" "command -v caniuse"
  successfully "npm install -g caniuse-cmd"

check "is-up (check website via isitup.org)" "command -v is-up"
  successfully "npm install -g is-up-cli"

check "pageres (capture screenshots of websites)" "command -v pageres"
  successfully "npm install -g pageres-cli"

check "splash (beautiful wallpapers from unsplash)" "command -v splash"
  successfully "npm install -g splash-cli"

check "dockly (managing Docker containers)" "command -v dockly"
  successfully "npm install -g dockly"

check "viewport-list (list of devices and their viewports)" "command -v viewport-list"
  successfully "npm install -g viewport-list-cli"

check "loadtest (run a load test on the selected url)" "command -v loadtest"
  successfully "npm install -g loadtest"

check "serve (easy to use static file server)" "command -v serve"
  successfully "npm install -g serve"

check "add-gitignore (generates a .gitignore for your project)" "command -v add-gitignore"
  successfully "npm install -g add-gitignore"

check "mobicon (mobile app icon generator)" "command -v mobicon"
  successfully "npm install -g mobicon-cli"

check "mobisplash (mobile app splash screen generator)" "command -v mobisplash"
  successfully "npm install -g mobisplash-cli"

check "dframe (put device frames around app screenshots)" "command -v dframe"
  successfully "npm install -g deviceframe"

check "aws (universal cli for amazon web services)" "command -v aws"
  successfully "pip install awscli"

check "s3cmd (fully-featured s3 client)" "command -v s3cmd"
  successfully "pip install s3cmd"

check "bitly-client (make and manage bitly/zenjoy.me shortlinks)" "command -v bitly-client"
  successfully "npm install -g bitly-client"

check "cash (convert currency rates)" "command -v cash"
  successfully "npm install -g cash-cli"

check "gfi (google font installer)" "command -v gfi"
  successfully "npm install -g google-font-installer"

check "mklicense (cli tool for generating licenses)" "command -v mklicense"
  successfully "npm install -g mklicense"

check "mapscii (google maps in your terminal)" "command -v mapscii"
  successfully "npm install -g mapscii"

check "carbon-now (beautiful images of your code)" "command -v carbon-now"
  successfully "npm i -g carbon-now-cli"

check "fuck (autocorrects error in previous command)" "command -v fuck"
  successfully "brew install thefuck"

check "organize (auto organize files based on file type)" "command -v organize"
  successfully "npm install -g organize-cli"

check "trash (move files and folders to the trash)" "command -v trash"
  successfully "npm install --global trash-cli"

check "empty-trash (empty the trash)" "command -v empty-trash"
  successfully "npm install --global empty-trash-cli"

check "rename (utility for renaming files)" "command -v rename"
  successfully "npm install --global rename-cli"

check "undollar (undollar strips the dollar sign from copy/pasted commands)" "command -v $"
  successfully "npm install -g undollar"

check "hub (tool that wraps git)" "command -v hub"
  successfully "brew install hub"

check "git-secret (stores private data inside a git repo)" "brew info git-secret"
  successfully "brew install git-secret"

check "git-extras (repo summary, repl, changelog, commit percentages, etc.)" "brew info git-extras"
  successfully "brew install git-extras"

# check "ttystudio (record and create terminal gif recordings)" "command -v ttystudio"
#   successfully "npm install -g ttystudio"

check "asciinema (record and share what happens in terminal)" "command -v asciinema"
  successfully "pip3 install asciinema"

check "imgp (blazing fast image resizer and rotator)" "command -v imgp"
  successfully "pip3 install pillow"

check "kill-tabs (kill all Chrome tabs to improve performance)" "command -v kill-tabs"
  successfully "npm install --global kill-tabs"

check "speedtest-net (test your internet speed)" "command -v speedtest-net"
  successfully "npm install --global speedtest-net"

check "cowsay (talk like a cow)" "command -v cowsay"
  successfully "brew install cowsay"

check "lolcat (talk in rainbows)" "command -v lolcat"
  successfully "gem install lolcat"
